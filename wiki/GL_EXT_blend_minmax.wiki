#summary GL_EXT_blend_minmax

== Contents ==

  * [GL_EXT_blend_minmax#Dependencies Dependencies]
  * [GL_EXT_blend_minmax#Overview Overview]
  * [GL_EXT_blend_minmax#New_Procedures_and_Functions New Procedures and Functions]
  * [GL_EXT_blend_minmax#New_Tokens New Tokens]
  * [GL_EXT_blend_minmax#Errors Errors]
  * [GL_EXT_blend_minmax#New_State New State]
  * [GL_EXT_blend_minmax#New_Implementation_Dependent_State New Implementation Dependent State]

== Dependencies ==

None


== Overview ==

Blending capability is extended by respecifying the entire blend
equation.  While this document defines only two new equations, the
BlendEquationEXT procedure that it defines will be used by subsequent
extensions to define additional blending equations.

The two new equations defined by this extension produce the minimum
(or maximum) color components of the source and destination colors.
Taking the maximum is useful for applications such as maximum projection
in medical imaging.


== New Procedures and Functions ==
{{{
void BlendEquationEXT(enum mode);
}}}

== New Tokens ==

Accepted by the <mode> parameter of BlendEquationEXT:

||FUNC_ADD_EXT  ||    0x8006||
||MIN_EXT       ||     0x8007||
||MAX_EXT       ||   0x8008||

Accepted by the <pname> parameter of !GetBooleanv, !GetIntegerv,
!GetFloatv, and !GetDoublev:

||BLEND_EQUATION_EXT    ||0x8009||


== Errors ==

INVALID_ENUM is generated by BlendEquationEXT if its single parameter
is not FUNC_ADD_EXT, MIN_EXT, or MAX_EXT.

INVALID_OPERATION is generated if BlendEquationEXT is executed between
the execution of Begin and the corresponding execution to End.


== New State ==

|| *Get Value* || *Get Command* || *Type* || *Initial Value* ||
||BLEND_EQUATION_EXT||!GetIntegerv||Z3||FUNC_ADD_EXT||


== New Implementation Dependent State ==

None
