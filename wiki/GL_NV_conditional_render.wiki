#summary GL_NV_conditional_render

== Contents ==

  * [GL_NV_conditional_render#Dependencies Dependencies]
  * [GL_NV_conditional_render#Overview Overview]
  * [GL_NV_conditional_render#New_Procedures_and_Functions New Procedures and Functions]
  * [GL_NV_conditional_render#New_Tokens New Tokens]
  * [GL_NV_conditional_render#Errors Errors]

== Dependencies ==

The extension is written against the OpenGL 2.0 Specification.

[GL_ARB_occlusion_query] or OpenGL 1.5 is required.


== Overview ==

This extension provides support for conditional rendering based on the
results of an occlusion query.  This mechanism allows an application to
potentially reduce the latency between the completion of an occlusion
query and the rendering commands depending on its result.  It additionally
allows the decision of whether to render to be made without application
intervention.

This extension defines two new functions, BeginConditionalRenderNV and
EndConditionalRenderNV, between which rendering commands may be discarded
based on the results of an occlusion query.  If the specified occlusion
query returns a non-zero value, rendering commands between these calls are
executed.  If the occlusion query returns a value of zero, all rendering
commands between the calls are discarded.

If the occlusion query results are not available when
BeginConditionalRenderNV is executed, the <mode> parameter specifies
whether the GL should wait for the query to complete or should simply
render the subsequent geometry unconditionally.

Additionally, the extension provides a set of "by region" modes, allowing
for implementations that divide rendering work by screen regions to
perform the conditional query test on a region-by-region basis without
checking the query results from other regions.  Such a mode is useful for
cases like split-frame SLI, where a frame is divided between multiple
GPUs, each of which has its own occlusion query hardware.



== New Procedures and Functions ==
{{{
void BeginConditionalRenderNV(uint id, enum mode);
void EndConditionalRenderNV(void);
}}}


== New Tokens ==

Accepted by the <mode> parameter of BeginConditionalRenderNV:

||QUERY_WAIT_NV                        ||           0x8E13||
||QUERY_NO_WAIT_NV                      ||          0x8E14||
||QUERY_BY_REGION_WAIT_NV               ||          0x8E15||
||QUERY_BY_REGION_NO_WAIT_NV           ||           0x8E16||



== Errors ==

INVALID_OPERATION is generated by BeginConditionalRenderNV if a previous
BeginConditionalRenderNV command has been executed without a
corresponding EndConditionalRenderNV command.

INVALID_OPERATION is generated by EndConditionalRenderNV if no
corresponding BeginConditionalRenderNV command has been executed.

INVALID_VALUE is generated by BeginConditionalRenderNV if <id> is not the
name of an existing occlusion query object.

INVALID_OPERATION is generated by BeginConditionalRenderNV if <id> is the
name of a query object with a <target> other than SAMPLES_PASSED.

INVALID_OPERATION is generated by BeginConditionalRenderNV if the query
identified by <id> is still in progress.

