#summary GL_EXT_blend_logic_op

== Contents ==

  * [GL_EXT_blend_logic_op#Dependencies Dependencies]
  * [GL_EXT_blend_logic_op#Overview Overview]
  * [GL_EXT_blend_logic_op#New_Procedures_and_Functions New Procedures and Functions]
  * [GL_EXT_blend_logic_op#New_Tokens New Tokens]
  * [GL_EXT_blend_logic_op#Errors Errors]
  * [GL_EXT_blend_logic_op#New__State New State]
  * [GL_EXT_blend_logic_op#New_Implementation_Dependent_State New Implementation Dependent State]

== Dependencies ==

[GL_EXT_blend_minmax] affects the definition of this extension


== Overview ==

A single additional blending equation is specified using the interface
defined by [GL_EXT_blend_minmax].  This equation is a simple logical
combination of the source and destination colors, where the specific
logical operation is as specified by !LogicOp.  While only the XOR
operation may find wide application, the generality of full logical
operations is allowed.


== New Procedures and Functions ==

None


== New Tokens ==

None


== Errors ==

INVALID_ENUM is generated by BlendEquationEXT if its single parameter
is not FUNC_ADD_EXT, MIN_EXT, MAX_EXT, FUNC_SUBTRACT_EXT,
FUNC_REVERSE_SUBTRACT_EXT, or LOGIC_OP.

INVALID_OPERATION is generated if BlendEquationEXT is executed between
the execution of Begin and the corresponding execution to End.

== New State ==

|| *Get Value* || *Get Command* || *Type* || *Initial Value* ||
||BLEND_EQUATION_EXT||!GetIntegerv||Z6 ||FUNC_ADD_EXT ||

== New Implementation Dependent State ==

None