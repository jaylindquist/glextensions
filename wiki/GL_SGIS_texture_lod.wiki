#summary GL_SGIS_texture_lod

== Contents ==

  * [GL_SGIS_texture_lod#Dependencies Dependencies]
  * [GL_SGIS_texture_lod#Overview Overview]
  * [GL_SGIS_texture_lod#New_Procedures_and_Functions New Procedures and Functions]
  * [GL_SGIS_texture_lod#New_Tokens New Tokens]
  * [GL_SGIS_texture_lod#Errors Errors]
  * [GL_SGIS_texture_lod#New_Implementation_Dependent_State New Implementation Dependent State]

== Dependencies ==

[GL_EXT_texture] is required

[GL_EXT_texture3D] affects the definition of this extension

[GL_EXT_texture_object] affects the definition of this extension

[GL_SGI_detail_texture] affects the definition of this extension

[GL_SGI_sharpen_texture] affects the definition of this extension



== Overview ==

This extension imposes two constraints related to the texture level of
detail parameter LOD, which is represented by the Greek character lambda
in the GL Specification.  One constraint clamps LOD to a specified
floating point range.  The other limits the selection of mipmap image
arrays to a subset of the arrays that would otherwise be considered.

Together these constraints allow a large texture to be loaded and
used initially at low resolution, and to have its resolution raised
gradually as more resolution is desired or available.  Image array
specification is necessarily integral, rather than continuous.  By
providing separate, continuous clamping of the LOD parameter, it is
possible to avoid "popping" artifacts when higher resolution images
are provided.

Note: because the shape of the mipmap array is always determined by
the dimensions of the level 0 array, this array must be loaded for
mipmapping to be active.  If the level 0 array is specified with a
null image pointer, however, no actual data transfer will take
place.  And a sufficiently tuned implementation might not even
allocate space for a level 0 array so specified until true image
data were presented.


== New Procedures and Functions ==

None


== New Tokens ==

Accepted by the <pname> parameter of TexParameteri, TexParameterf,
TexParameteriv, TexParameterfv, GetTexParameteriv, and GetTexParameterfv:

||TEXTURE_MIN_LOD_SGIS          ||  0x813A||
||TEXTURE_MAX_LOD_SGIS          ||  0x813B||
||TEXTURE_BASE_LEVEL_SGIS       ||  0x813C||
||TEXTURE_MAX_LEVEL_SGIS        ||  0x813D||


== Errors ==

INVALID_VALUE is generated if an attempt is made to set
TEXTURE_BASE_LEVEL_SGIS or TEXTURE_MAX_LEVEL_SGIS to a negative value.


== New Implementation Dependent State ==

None
