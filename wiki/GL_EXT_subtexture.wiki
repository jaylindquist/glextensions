#summary GL_EXT_subtexture

== Contents ==

  * [GL_EXT_subtexture#Dependencies Dependencies]
  * [GL_EXT_subtexture#Overview Overview]
  * [GL_EXT_subtexture#New_Procedures_and_Functions New Procedures and Functions]
  * [GL_EXT_subtexture#New_Tokens New Tokens]
  * [GL_EXT_subtexture#Errors Errors]
  * [GL_EXT_subtexture#New_Implementation_Dependent_State New Implementation Dependent State]

== Dependencies ==

[GL_EXT_abgr] affects the definition of this extension

[GL_EXT_texture] is required

[GL_EXT_texture3D] affects the definition of this extension


== Overview ==

This extension allows a contiguous portion of an already-existing
texture image to be redefined, without affecting the remaining portion
of the image, or any of the other state that describe the texture.  No
provision is made to query a subregion of a texture.

Semantics for null image pointers are defined for TexImage1D,
TexImage2D, and TexImage3DEXT.  Null image pointers can be used by
applications to effectively support texture arrays whose dimensions
are not a power of 2.


== New Procedures and Functions ==

void TexSubImage1DEXT(enum target,
int level,
int xoffset,
sizei width,
enum format,
enum type,
const void* pixels);

void TexSubImage2DEXT(enum target,
int level,
int xoffset,
int yoffset,
sizei width,
sizei height,
enum format,
enum type,
const void* pixels);

void TexSubImage3DEXT(enum target,
int level,
int xoffset,
int yoffset,
int zoffset,
sizei width,
sizei height,
sizei depth,
enum format,
enum type,
const void* pixels);


== New Tokens ==

None


== Errors ==

INVALID_ENUM is generated by TexSubImage1DEXT if its <target> parameter
is not TEXTURE_1D.

INVALID_ENUM is generated by TexSubImage2DEXT if its <target> parameter
is not TEXTURE_2D.

INVALID_ENUM is generated by TexSubImage3DEXT if its <target> parameter
is not TEXTURE_3D_EXT.

INVALID_OPERATION is generated by TexSubImage1DEXT if the specified
texture array has not been defined by a previous TexImage1D operation.

INVALID_OPERATION is generated by TexSubImage2DEXT if the specified
texture array has not been defined by a previous TexImage2D operation.

INVALID_OPERATION is generated by TexSubImage3DEXT if the specified
texture array has not been defined by a previous TexImage3DEXT
operation.

INVALID_VALUE is generated if <level> is less than zero

INVALID_VALUE is generated if <width>, <height>, or <depth> is negative.

INVALID_VALUE is generated if <xoffset>, <yoffset>, or <zoffset> is
less than -TEXTURE_BORDER.

INVALID_VALUE is generated if
(xoffset + width) > (TEXTURE_WIDTH - TEXTURE_BORDER), or if
(yoffset + height) > (TEXTURE_HEIGHT - TEXTURE_BORDER), or if
(zoffset + depth) > (TEXTURE_DEPTH_EXT - TEXTURE_BORDER).

INVALID_ENUM is generated if <format> is not COLOR_INDEX, RED, GREEN,
BLUE, ALPHA, RGB, RGBA, LUMINANCE, or LUMINANCE_ALPHA (or ABGR_EXT if
EXT_abgr is supported).

INVALID_ENUM is generated if <type> is not UNSIGNED_BYTE, BYTE,
UNSIGNED_SHORT, SHORT, UNSIGNED_INT, INT, or FLOAT.

INVALID_OPERATION is generated if TexSubImage1DEXT, TexSubImage2DEXT,
or TexSubImage3DEXT is called between execution of Begin and the
corresponding execution of End.


== New Implementation Dependent State ==

None
